/* ==========================================================================
 * Copyright 2003-2004 Mevenide Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 * =========================================================================
 */

package org.mevenide.netbeans.devel;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;
import org.mevenide.genapp.TemplateInfo;
import org.mevenide.netbeans.project.wizards.GenAppWizardIterator;
import org.openide.WizardDescriptor;


public class GenerateCodePanelVisual extends JPanel {
    
    private GenerateCodePanel panel;
    
    public GenerateCodePanelVisual(GenerateCodePanel pnl) {
        this.panel = pnl;
        initComponents();
        
        setName("Generate Code snippets");
        putClientProperty("NewProjectWizard_Title", "Generate Code");
    }
    
    boolean valid(WizardDescriptor wizardDescriptor) {
        return true;
    }
    
    void read(WizardDescriptor d) {
        TemplateInfo info = (TemplateInfo)d.getProperty(GenAppWizardIterator.TEMPLATE);
        String val = (String)d.getProperty(GenAppWizardIterator.PROPERTY_PREFIX + "genproject");
        cbProjectTemplate.setSelected(val != null ? Boolean.valueOf(val).booleanValue() : 
                                                    Boolean.valueOf(info.getDefaultValue("genproject")).booleanValue());
        val = (String)d.getProperty(GenAppWizardIterator.PROPERTY_PREFIX + "genoutput");
        cbOutput.setSelected(val != null ? Boolean.valueOf(val).booleanValue() : 
                                           Boolean.valueOf(info.getDefaultValue("genoutput")).booleanValue());
        val = (String)d.getProperty(GenAppWizardIterator.PROPERTY_PREFIX + "genprops");
        cbPluginProps.setSelected(val != null ? Boolean.valueOf(val).booleanValue() : 
                                                Boolean.valueOf(info.getDefaultValue("genprops")).booleanValue());
        val = (String)d.getProperty(GenAppWizardIterator.PROPERTY_PREFIX + "gengrammar");
        cbGrammar.setSelected(val != null ? Boolean.valueOf(val).booleanValue() : 
                                            Boolean.valueOf(info.getDefaultValue("gengrammar")).booleanValue());
    }
    
    void store(WizardDescriptor d) {
        d.putProperty(GenAppWizardIterator.PROPERTY_PREFIX + "genproject", Boolean.toString(cbProjectTemplate.isSelected()));
        d.putProperty(GenAppWizardIterator.PROPERTY_PREFIX + "genoutput", Boolean.toString(cbOutput.isSelected()));
        d.putProperty(GenAppWizardIterator.PROPERTY_PREFIX + "genprops", Boolean.toString(cbPluginProps.isSelected()));
        d.putProperty(GenAppWizardIterator.PROPERTY_PREFIX + "gengrammar", Boolean.toString(cbGrammar.isSelected()));
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        cbProjectTemplate = new javax.swing.JCheckBox();
        cbOutput = new javax.swing.JCheckBox();
        cbGrammar = new javax.swing.JCheckBox();
        cbPluginProps = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        cbProjectTemplate.setText("Generate New Project Template");
        add(cbProjectTemplate, new java.awt.GridBagConstraints());

        cbOutput.setText("Generate Output Parsing/Editor Annotation suppoort");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(cbOutput, gridBagConstraints);

        cbGrammar.setText("Generate Jelly TagLibrary completion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        add(cbGrammar, gridBagConstraints);

        cbPluginProps.setText("Generate Maven Plugin Properties Definition");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        add(cbPluginProps, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents
    public void addNotify() {
        super.addNotify();
    }
    
//    boolean validateBasics(WizardDescriptor wizardDescriptor) {
//        if (txtProjectName.getText().length() == 0 ) {
//            wizardDescriptor.putProperty( "WizardPanel_errorMessage", "Project Name is not valid folder name.");
//            return false; // Display name not specified
//        }
//        File destFolder = new File( txtFolder.getText() );
//        File[] kids = destFolder.listFiles();
//        if ( destFolder.exists() && kids != null && kids.length > 0) {
//            // Folder exists and is not empty
//            wizardDescriptor.putProperty( "WizardPanel_errorMessage", "Project Folder already exists and is not empty.");
//            return false;
//        }
//        wizardDescriptor.putProperty( "WizardPanel_errorMessage", "" );
//        return true;
//    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbGrammar;
    private javax.swing.JCheckBox cbOutput;
    private javax.swing.JCheckBox cbPluginProps;
    private javax.swing.JCheckBox cbProjectTemplate;
    // End of variables declaration//GEN-END:variables
    
    
}
