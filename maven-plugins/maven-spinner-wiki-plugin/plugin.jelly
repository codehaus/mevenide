<project xmlns:j="jelly:core"
		 xmlns:util="jelly:util"
		 xmlns:ant="jelly:ant"
		 xmlns:doc="doc"
		 xmlns:log="jelly:log"
		 xmlns:x="jelly:xml"
		 xmlns:jsl="jelly:jsl"
		 xmlns:html="jelly:html">
		 
  <!-- 
      @refactor split this goal into smaller ones
  -->
  <goal name="spinner-wiki:generate-templates" prereqs="spinner-wiki:clean">
  	
  	<j:set var="wikiDestTempDir" value="${maven.build.dir}/spinner-wiki-tmp"/>
  	<j:set var="wikiDestDir" value="${maven.build.dir}/spinner-wiki"/>
  	<j:set var="wikiSrcDir" value="${maven.build.dir}/templates/spinner-wiki"/>

	<ant:mkdir dir="${wikiSrcDir}"/>
	<ant:mkdir dir="${wikiDestTempDir}"/>
	
	<!-- determine which navigation file to use -->
	<j:include file="${plugin.resources}/userNavigation.jelly"/>
    
    <!-- prepare files to transform -->
	<ant:copy todir="${wikiSrcDir}">
  		<ant:fileset dir="${maven.spinner.wiki.plugin.templates.location}"/>
  	</ant:copy>
  	
  	<!-- set correct properties for xdoc -->
  	<j:set var="oldMavenDocsSrc" value="${maven.docs.src}"/>
  	<j:set var="maven.docs.src" value="${wikiSrcDir}"/>
  	<j:set var="maven.docs.dest" value="${wikiDestTempDir}"/>
  	<j:set var="maven.gen.docs" value="${wikiDestTempDir}/generated-xdocs"/>
  	
  	<!-- push css to ${maven.docs.src} dir so that they are available for xdoc -->
  	<ant:copy todir="${maven.docs.src}">
	    <ant:fileset dir="${oldMavenDocsSrc}" includes="style/*.*"/>
  	</ant:copy>
  	
  	<!-- transform navFile -->
  	<x:parse var="navFile" xml="${siteNavFile}"/>
    <j:include file="${plugin.resources}/navigation.jsl"/>
  	<j:file name="${maven.docs.src}/navigation.xml" prettyPrint="true">
  	  	<jsl:style select="$navFile" stylesheet="${spinnerWikiNavigationSheet}"/>
    </j:file>
	
	<!-- perform jsl transformation -->
	<j:set var="siteNavFile" value="${wikiSrcDir}/navigation.xml"/>
	<doc:performJSL srcdir="${wikiSrcDir}" destdir="${wikiDestTempDir}"/>
  	
  	<ant:fileScanner var="generatedTemplates">
  		<ant:fileset dir="${wikiDestTempDir}/">
  			<!-- 
  				scary list of files since maven reports 
  				are generated in the same dir as well. 
  				there should be a better way..
  			-->
  			<ant:include name="abort.html"/>
  			<ant:include name="wchanges.html"/>
  			<ant:include name="edit.html"/>
  			<ant:include name="editlast.html"/>
  			<ant:include name="index.html"/>
  			<ant:include name="message.html"/>
  			<ant:include name="search.html"/>
  			<ant:include name="upload.html"/>
  			<ant:include name="view.html"/>
  		</ant:fileset>
  	</ant:fileScanner>
  	
  	<!-- copy generated files to ${wikiSrcDir} -->
  	<j:forEach items="${generatedTemplates.iterator()}" var="template">
  		<log:info>creating template : ${template}</log:info>
  		
  		<!-- get the final file name - i.e. path -->
	    <util:file var="templateFile" name="${template}"/>
  		<j:set var="fileName">${templateFile.getName()}</j:set>
  		<j:if test="${fileName != 'wchanges.html'}">
  		    <j:set var="newFileName" value="${wikiDestDir}/${fileName.substring(0, fileName.indexOf('.'))}.htm"/>
  		</j:if>
  		<j:if test="${fileName == 'wchanges.html'}">
	  		<j:set var="newFileName" value="${wikiDestDir}/changes.htm"/>
  		</j:if>
  		
  		<!-- update 'src' and 'style' elements of the html templates -->
		<ant:delete file="${newFileName}" quiet="true"/>
		
		<html:parse html="${template}" var="myHtmlFile"/>
		
		<j:include file="${plugin.resources}/htmlTemplate.jsl"/>
		
		<!-- ensure dest directory exists -->
		<ant:mkdir dir="${wikiDestDir}"/>
		
	  	<j:file name="${newFileName}" prettyPrint="true">
	  	    <jsl:style select="$myHtmlFile" stylesheet="${htmlTransformationSheet}"/>
	    </j:file>

  	</j:forEach>
  	
  	<!-- grab css sheets -->
  	<ant:copy todir="${wikiDestDir}">
	  	<ant:fileset dir="${wikiSrcDir}" includes="style/*.css"/>
	</ant:copy>
 	<ant:copy todir="${wikiDestDir}/style">
	  	<ant:fileset dir="${pom.getPluginContext('maven-xdoc-plugin').getVariable('plugin.dir')}/plugin-resources/css"
	  	             includes="*.css"/>
  	</ant:copy> 
  	
  	<!-- clean temporary directories -->
  	<!-- ant:delete dir="${wikiDestTempDir}" quiet="true"/>
  	<ant:delete dir="${wikiSrcDir}" quiet="true"/ -->

  </goal>
  
  <goal name="spinner-wiki:clean">
  	<j:set var="wikiDestDir" value="${maven.build.dir}/spinner-wiki"/>
    <ant:delete dir="${wikiDestDir}"/>
  </goal>

</project>