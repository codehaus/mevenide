<?xml version="1.0" encoding="UTF-8"?>



<project default="javahelp-plugin-project:deploy-plugin-locally"
         xmlns:j="jelly:core"
         xmlns:util="jelly:util"
         xmlns:x="jelly:xml"
         xmlns:ant="jelly:ant"
         >

  <goal name="javahelp-plugin-project:create-plugin">
    <mkdir dir="${maven.build.dir}"/>
    <copy todir="${maven.build.dir}" overwrite="yes" verbose="true">
      <fileset dir="${maven.src.dir}/conf">
        <include name="*"/>
        <exclude name="manifest.mf"/>
      </fileset>
    </copy>
    <mkdir dir="${maven.build.dir}/META-INF"/>
    <copy todir="${maven.build.dir}/META-INF" overwrite="yes">
      <fileset dir="${maven.src.dir}/conf">
        <include name="manifest.mf"/>
      </fileset>
    </copy>
    <mkdir dir="${maven.build.dir}/plugin-resources"/>
    <copy todir="${maven.build.dir}/plugin-resources" overwrite="yes" verbose="true">
      <fileset dir="${maven.src.dir}/plugin-resources">
        <include name="*"/>
      </fileset>
    </copy>
  </goal>

  <goal name="javahelp-plugin-project:install-plugin-locally" prereqs="javahelp-plugin-project:deploy-plugin-locally">
    <attainGoal name="plugin:install"/>
  </goal>

  <goal name="javahelp-plugin-project:deploy-plugin-locally" prereqs="javahelp-plugin-project:create-plugin">
    <util:file var="pluginPomFile" name="${maven.build.dir}/project.xml"/>
    <x:parse var="pluginXML" xml="${pluginPomFile}"/>
    <x:set var="pluginPOM" select="$pluginXML/project"/>
    <j:set var="pluginID"><x:expr select="$pluginPOM/id"/></j:set>
    <j:set var="pluginVersion"><x:expr select="$pluginPOM/currentVersion"/></j:set>
    <util:file var="pluginBuildDir" name="${maven.build.dir}"/>
    <j:set var="pluginFileList" value="${pluginBuildDir.listFiles()}"/>
    <j:new var="pluginIncludeTags" className="java.util.ArrayList"/>
    <j:new var="pluginIncludeList" className="java.lang.StringBuffer"/>
    <j:forEach var="file" items="${pluginFileList}">
      <j:choose>
        <j:when test="${file.isFile()}">
          <j:set var="isPluginFile" value="false"/>
          <j:switch on="${file.getName()}">
            <j:case value="plugin.properties" fallThru="true"/>
            <j:case value="plugin.jelly" fallThru="true"/>
            <j:case value="project.xml" fallThru="true"/>
            <j:case value="project.properties" fallThru="false">
              <j:set var="isPluginFile" value="true"/>
            </j:case>
          </j:switch>
          <j:if test="${isPluginFile}">
            <j:set var="line" encode="false"><![CDATA[,${file.getName()}]]></j:set>
            <j:set var="dummy" encode="false">${pluginIncludeList.append(line)}</j:set>
          </j:if>
        </j:when>
        <j:otherwise>
          <j:invoke var="cfiles" method="list" on="${file}"/>
          <j:if test="${!empty(cfiles)}">
            <j:set var="isPluginFile" value="false"/>
            <j:switch on="${file.getName()}">
              <j:case value="META-INF" fallThru="true"/>
              <j:case value="plugin-resources" fallThru="false">
                <j:set var="isPluginFile" value="true"/>
              </j:case>
              <j:case value="classes" fallThru="false">
                <j:set var="_lineDir" encode="false">${maven.build.dir}/classes</j:set>
                <j:set var="_lineFiles" encode="false">**/*.class</j:set>
                <j:set var="_linePos" value="${_lineDir.length()}"/>
                <j:set var="line" value="${_linePos}:${_lineDir}${_lineFiles}"/>
                <j:set var="dummy" encode="false">${pluginIncludeTags.add(line)}</j:set>
              </j:case>
            </j:switch>
            <j:if test="${isPluginFile}">
              <j:set var="line" encode="false"><![CDATA[,${file.getName()}/**/*]]></j:set>
              <j:set var="dummy" encode="false">${pluginIncludeList.append(line)}</j:set>
            </j:if>
          </j:if>
        </j:otherwise>
      </j:choose>
    </j:forEach>
    
    <delete file="${maven.createdPlugin.web.dist}/${maven.createdPlugin.groupId}/plugins/${pluginID}-${pluginVersion}.jar"/>
    <j:set var="dummy" encode="false">
      <ant:jar destfile="${maven.createdPlugin.web.dist}/${maven.createdPlugin.groupId}/plugins/${pluginID}-${pluginVersion}.jar"
           manifest="${maven.build.dir}/META-INF/manifest.mf"
           verbose="true">
        <fileset dir="${maven.build.dir}" includes="${pluginIncludeList.substring(1)}"/>
        <j:forEach var="line" items="${pluginIncludeTags}">
          <j:set var="_cpos" value="${line.indexOf(':')}"/>
          <j:invokeStatic var="_pos" className="java.lang.Integer" method="parseInt">
            <j:arg type="java.lang.String" value="${line.substring(0, _cpos)}"/>
          </j:invokeStatic>
          <j:set var="_fpos" value="${_cpos + _pos}"/>
          <j:invoke var="_lineDir" method="substring" on="${line}">
            <j:arg type="int" value="${_cpos + 1}"/>
            <j:arg type="int" value="${_fpos + 1}"/>
          </j:invoke>
          <j:invoke var="_lineFiles" method="substring" on="${line}">
            <j:arg type="int" value="${_fpos + 1}"/>
          </j:invoke>
          <fileset dir="${_lineDir}" includes="${_lineFiles}"/>
        </j:forEach>
      </ant:jar>
    </j:set>
  </goal>
</project>
