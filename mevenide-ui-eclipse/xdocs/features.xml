<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
  <properties>
	<author email="rhill2@free.fr">Gilles Dodinet</author>
	<title>Features</title>
  </properties>
  <body>
	<section name="Features List">
	  <div id="documentContent">
		<p>
		  Implemented features fall into seven categories :
		  <ul>
			<li><a href="#Bidirectional Synchronization">Bidirectional Synchronization</a></li>
			<li><a href="#Maven Launcher">Maven Launcher</a></li>
			<li><a href="#POM Editor">POM Editor</a></li>
			<li><a href="#Jelly Editor">Jelly Editor</a></li>
			<li><a href="#Maven oriented wizards">Maven Oriented Wizards</a></li>
			<li><a href="#Templates">Templates</a></li>
			<li><a href="#Provider Infrastructure">Provider Infrastructure</a></li>
			<li><a href="#Maven Builder">Maven Builder</a></li>
			<li><a href="#Repository Browser And Search Engine">Repository Browser And Search Engine</a></li>
		  </ul>
		</p>
	  </div>
  </section>
  <section name="Bidirectional Synchronization">
	<div id="documentContent">
	  <p>Synchronize Eclipse Project and Maven Project through a view ala Team Synchronization view</p>
	  <p>
		<ul>
		  <li>Source directories synchronization</li>
		  <li>Dependencies synchronization</li>
		  <li>Resources and UnitTest resources rynchronization, supporting excludes</li>
		  <li>Jar Override Support</li>
		  <li>Primary output folder support</li>
		  <li>Supports eclipse.dependency (from maven-eclipse-plugin) property</li>
		  <li>Support for ignored artifacts (.mvnignore)</li>
		  <li>Possibility to not write back project.properties on a per synchronization basis</li>
		  <li>Possibility to filter the elements to be synchronized - eventually via regular expressions</li>
		</ul>
	  </p>
	  <p>
		<u>Known issues</u><br/>
		<ul>
			<li>if output folder is set to ${basedir} folder, it will always appear in the Synchronization view, even if in synch </li>
		</ul>
	  </p>
	  <p>
		<u>Known limitations</u><br/>
		<ul>
			<li>No conflict support (e.g. if dependencies version conflict)</li>
			<li>Doesnot support "Output folder per Source folder" Eclipse option</li>
			<li>Doesnot support Eclipse 3.0 inclusion patterns</li>
			<li>Link to external resources/files not tested</li>
			<li>POM defining entities may not be accurately synchronized because we donot support entities <font color="#009900">writing</font> yet</li>
		</ul>
	  </p>
	  <p>
	  	<a href="user-guide/sync.html">More details</a>
	  </p>
	</div>
  </section>
  <section name="Maven Launcher">
	<div id="documentContent">
	  <p>
		<ul>
		  <li>Integration into Eclipse External Tools.</li>
		  <li>List of all available goals - plugins defined ones as well as custom ones</li>
		  <li>Default goals to support one-click launching</li>
		  <li>Plugins linked to their homepage whenever possible</li>
		</ul>
	  </p>
	  <p>
		<u>Known limitations</u><br/>
		<ul>
			<li>No debug mode (Jelly debugging, attach to a remote VM, etc.)</li>
			<li>Cannot set JVM options</li>
			<li>At the moment, only project.xml can be run</li>
		</ul>
	  </p>
	  <p>
	  	<a href="user-guide/run.html">More details</a>
	  </p>
	</div>
  </section>
  <section name="POM Editor">
	<div id="documentContent">
	  <p>
		<ul>
		  <li>Multipart Editor based on Eclipse Forms API</li>
		  <li>Can now read POMs that use entities</li>
		</ul>
	  </p>
	  <p>
		<u>Known issues</u><br/>
		<ul>
			<li>Due to the lazy intitialization that comes for free with the Forms API, changes in source page donot propagate in the pages that havent been opened before</li>
		</ul>
	  </p>
	  <p>
		<u>Known limitations</u><br/>
		<ul>
			<li><font color="#009900">No support to write xml entities support yet</font> - we need to think about some solutions to support full bidirectionnal I/O.</li>
			<li>No contentassist in the soure page yet</li>
			<li>In the current state, POM Editor wont open non-conform files</li>
		</ul>
	  </p>
	  <p>
	  	<a href="user-guide/edit.html">More details</a>
	  </p>
	</div>
  </section>
  <section name="Jelly Editor">
	<div id="documentContent">
	  <p>
		<ul>
		  <li>Provides contentassist for Jelly files.</li>
		  <li>Refined contentassist for maven.xml : takes Werkz tags into account and propose custom goals as well.</li>
		  <li>Outline page for maven.xml showing all available goals (global ones as well as custom ones)</li>
		  <li>Possibility to run a goal from the outline page by double-clicking it to support fast preview</li>
		  <li>Possibility to filter the outline page - eventually via regular expressions</li>
		</ul>
	  </p>
	  <p>
		<u>Known issues</u><br/>
		<ul>
			<li>Conflicts between custom goals and global goals when namespace is identical (e.g. 'war:some-custom-goal')</li>
		</ul>
	  </p>
	  <p>
		<u>Known limitations</u><br/>
		<ul>
			<li>No code completions for prereqs attribute</li>
			<li>Limited jelly:ant taglib support</li>
			<li>Completion proposals (custom goals) not computed from the buffer but from the previously saved file</li>
			<li>No proposal context information yet</li>
			<li>No namespace proposal yet</li>
			<li>Outline page not linked to the editor</li>
		</ul>
	  </p>
	  <p>
	  	<a href="user-guide/contentassist.html">More details</a>
	  </p>
	</div>
  </section>
  <section name="Maven oriented wizards">
	<div id="documentContent">
	  <p>
		<ul>
		  <!-- li>Simple Maven Project Wizard based on Eclipse java project wizard</li>
		  <li>Maven Project Wizard creates a POM according to the informations entered in the wizard</li -->
		  <li>Simple, template-based, POM Wizards </li>
		</ul>
	  </p>
	  <!-- p>
		<u>Known limitations</u><br/>
		<ul>
			<li>Cannot fully customize the generated POM before the creation</li>
		</ul>
	  </p -->
	  <p>
	  	<u>In progress</u><br/>
	  	<ul>
	  		<li>A not fully functional Maven Project Wizard is under development</li>
	  	</ul>
	  </p>
	  <p>
	  	<a href="user-guide/wizard.html">More details</a>
	  </p>
	</div>
  </section>
  <section name="Templates">
	<div id="documentContent">
	  <p>
		<ul>
		  <li>POM Templates can be managed (creation/deletion) through the Preference pages</li>
		  <li>Pom Creation Action allows to quickly generate a new POM, possibly using a predefined template.</li>
		</ul>
	  </p>
	  <p>
		<u>Known limitations</u><br/>
		<ul>
			<li>Cannot edit templates from within Eclipse yet</li>
		</ul>
	  </p>
	  <p>
	  	<a href="user-guide/pom-templates.html">More details</a>
	  </p>
	</div>
  </section>
  <section name="Pom validation">
	<div id="documentContent">
	  <p>
		<ul>
		  <li>Validate a POM against Maven XSD</li>
		  <li>Integrates into problem view</li>
		</ul>
	  </p>
	  <p>
	  	<a href="user-guide/validate.html">More details</a>
	  </p>
	</div>
  </section>
  <section name="Provider Infrasctructure">
	<div id="documentContent">
	  <p>
		<ul>
		  <li>Maven Plugin Providers can now plug in Mevenide really easily thanks org.mevenide.ui.preference extension point</li>
		</ul>
	  </p>
	  <p>
	  	<a href="user-guide/provider-infrastructure.html">More details</a>
	  </p>
	</div>
  </section>
  <section name="Maven Builder">
	<div id="documentContent">
	  <p>
		<ul>
		  <li>Allows to easily keep track of goals that need to be run on projects depending on the files that have changed since goal run</li>
		  <li>Allows to autolaunch goals (disabled by default)</li>
		</ul>
	  </p>
	  <p>
		<u>Known limitations</u><br/>
		<ul>
			<li>Project references are not managed yet</li>
		</ul>
	  </p>
	  <p>
	  	<a href="user-guide/builder.html">More details</a>
	  </p>
	</div>
  </section>
  <section name="Repository Browser and Search Engine">
	<div id="documentContent">
	  <p>
		<ul>
		  <li>Allows to browse a repository</li>
		  <li>Allows to download remote artifact to local repository</li>
		  <li>Allows to search artifacts in a repository</li>
		</ul>
	  </p>
	  <p>
		<u>Known limitations</u><br/>
		<ul>
			<li>Local repositories not browsable yet</li>
			<li>Only HTTP repositories are managed for now</li>
			<li>Cannot honor cancellation</li>
		</ul>
	  </p>
	  <p>
	     <u>Notes: This feature is in an alpha state. It depends on deprecated <a href="http://jface.sourceforge.net/mavenzilla">Mavenzilla</a> 0.1 API.</u>
	  </p>
	  <p>
	  	<a href="user-guide/repo_browsing.html">More details</a>
	  </p>
	</div>
  </section>
  </body>
</document>
