Features

  The current features are described below, to file bugs or request additional 
features, file an issue at the {{{http://jira.codehaus.org/browse/MEVENIDE}bug tracking system}}
subcomponent <<mevenide2-netbeans>>.

* Projects

  * Open existing maven2 projects without any imports or synchronizations

  * An IDE project type directly based on maven2 POM.

  * Run maven builds from the UI.

  * Project dependencies resolved dynamically based on currently opened projects

  * Download javadoc and sources for projects dependencies

  * Show compile/runtime/test dependencies, both direct and transitive
  
  Project Layout : 

[../images/projectlayout.png] 

  We use the maven embedder to retrieve information about the project. There are a few outstanding issues on the embedder side:

  * {{{http://jira.codehaus.org/browse/MNG-1457}[MNG-1457]Embedder is never completely offline}}. This one can cause a slow startup of the IDE or slow opening of the project, especially when the project was not built before and it's dependencies are not present locally.

  * {{{http://jira.codehaus.org/browse/MNG-1665}[MNG-1667]No way to plug into artifact resolution}}. When dependency resolution fails, the UI shows no dependencies.

  * {{{http://jira.codehaus.org/browse/MNG-1181}[MNG-1181]No multiproject builds}}. Cannot build "pom" packages projects.

  * {{{http://jira.codehaus.org/browse/MNG-1117}[MNG-1117]Writing the pom doesn't preserver formatting}}. No project updating from the UI yet.

  * {{{http://jira.codehaus.org/browse/MNG-1118}[MNG-1118]Not possible to handle failed artifact resolution from IDE.}}

  Please vote for these issues, thanks.

* Editor completion

  The schema based code completions are available for POM files, settings files, assembly descriptors and netbeans module descriptors. Apart from the static completion, a few dynamic helpers are also available.

  * List of possible modules.

  * Plugin execution goals and phases.

  * Plugin configuration parameter names. 

[../images/completion1.png]

  * Dependency scope values
  
  * Available versions for dependencies and plugins

[../images/completion2.png]

  * For assembly descriptors, suggest excludes/includes based on dependencies in the POM.

[../images/completion3.png]

* Continuum 

  Apache Continuum is a continuous integration server, the Mevenide support is able to connect to these servers through the XML-RPC interface.

  * Configurable list of servers

  * Listing of defined projects on the server

  * Information about build states

  * Can Force a rebuild of a given project

[../images/continuum.png]

