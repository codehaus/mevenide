Intro

  The IntelliJ IDEA Maven-2 plugin integrates Maven-2 into IntelliJ IDEA.
  Similar to the Ant plugin, the Maven-2 plugin allows execution of goals (or phases)
  and redirects output (with error highlighting) to the message window.

* Important change since version 1.2

  Running under IDEA 5.0 is no longer supported. So the plugin will not work
  with IDEA versions prior to 6.0!

  For further changes and improvements checkout the {{{changes-report.html}changes report}}
  or take a look at the
  {{{http://quebbemann.kicks-ass.net/trac/projects/idea-maven-plugin/wiki/NewInVersion1.2} new features described in the Wiki}}

Requirements

  In order to use or build the plugin you must have installed {{{http://maven.apache.org}Maven-2}}
  and a Java executable must be in your <<PATH>> variable.

  In case you have defined the environment variable <<M2_HOME>> you can start immediately using
  the plugin without any further configuration. Otherwise you must specify the home directory of
  your Maven-2 installation in the configuration dialogs.

Installation

  Available for IDEA 6.0 through IDEA's built-in plugin manager, directly from
  {{{http://plugins.intellij.net/plugin/?id=1166} IDEA's plugin page}} or from
  the {{{download.html}download}} page hosted on this site..

  In case you downloaded the plugin, simply extract the content of the binary archive 
  into your IDEA plugin directory.
  The extracted folder (idea-maven-plugin) contains another folder "lib", where all the JARs reside.

Usage

  If you have added your Maven-2 bin directory to your PATH variable you don't have to do anything.
  Otherwise you must tell the plugin, where the Maven-2 executable is located on your filesystem.
  This can either be done via the application wide Maven-2 settings dialog or via the project
  related Maven-2 settings.

  The project settings always override the application settings!

  <<The plugin will not work with IDEA versions prior to 6.0!>>

  The plugin was tested under Windows and Linux.

  It was not tested under Mac OS X.

  Retrotranslator was used to translate the JDK5 binaries into JDK1.4 ones.

  For further instructions on using the plugin check out {{{usage.html}the usage guide}} or
  checkout the {{{screenshots.html}screenshots}}.