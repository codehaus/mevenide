<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
    <properties>
    	<author email="rhill@wanadoo.fr">Gilles Dodinet</author>
        <title>Help Page</title>
    </properties>
    <body>
    	<section name="POM Synchronization">
         	<div id="documentContent">
			<p>
				Mevenide POM Synchronization now provides only one Page, consisting of two main elements : 
				<ul>
					<li>a TabFolder from which user should specify which artifact is to put back in to the POM</li>
					<li>a simple composite allowing the user to specify the inheritance status of the POM</li>
				</ul>
			</p>
			</div>
			<subsection name="SourceDirectory Synchronization">
				<div id="documentContent">
			<p>	
				Since POM contains much more information than Eclipse .classpath, when synchronizing POM,
				user have to provide additional informations. For every Eclipse SourceFolder, the type of Maven Source Directory has to be specified
				through the SourceDirectory Mapping wizard page. Also user should declare if it is inherited or not. If the POM itself isnot 
				inherited then the checkbox (third column) isnot enabled.
				<br/><br/>
				<center>
					<img border="1px" src="images/sourcedirectory-mapping.png"/>
					<br/><br/>
					<font size="-1"><b>Screenshot 7</b>Source Directory Mapping Wizard Page</font>
					<br/><br/>
				</center>
			</p>
			</div>
			</subsection>
			<subsection name="Dependency Synchronization">
				<div id="documentContent">
			<p>
				Mevenide provides an automatic Dependency resolving mechanism that can determine in a rather accurate way the groupId, artifactId and version of a given Dependency.
				Tho it can fail, then the user can help it using the Dependency Mapping wizard page.
				Also please note that if the library is not installed in the local repo, groupId will NOT be resolved, but will be assigned to <code>nonResolvedGroupId</code> and a key 
				will be added to project.properties to make use of Maven jar overriding facility.
				<br/><br/>
				<center>
					<img border="1px" src="images/dependency-mapping.png"/>
					<br/><br/>
					<font size="-1"><b>Screenshot 8</b>Dependency Mapping Wizard Page</font>
				</center>
				<br/><br/>
				</p>
				<p>
				Mevenide provides support for Dependency properties through the Dependency Property dialog that can be attained by pressing the 'Properties' button.
				<br/><br/>
			</p>
			<p>
				<center>
					<img border="1px" src="images/dependency-properties.png"/>
					<br/><br/>
					<font size="-1"><b>Screenshot 9</b>Dependency Properties Dialog</font>	
				</center>
				<br/><br/>		
			</p>
			<p>
				We use colors to help the user to manage inheritance and solve dependencies issues. 
			</p>
			<p>
					<ul>
						<li>
							<font color="GREY">Grey</font> : artifact already declared in parent (ReadOnly) 
						</li>
						<li>
							<font color="RED">Red</font> : artifact that conflicts with another artifact (that may be declared either 
							in parent or current pom). We consider a conflict occurs between two artifacts 
							when there is a discrepancy between their respective version while their groupId 
							and artifactId are equal. User should resolve the conflict by either removing the 
							artifact from the list or editing the concerned POM.
						</li>
						<li>
							<font color="ORANGE">Orange</font> : artifact declared in both parent and current POM (or Eclipse Project). 
							Such an artifact should be either be specified as inherited or be removed from the list.
						</li>
						<li>
							<font color="GREEN">Green</font>  : artifact already present in POM. No action required.
						</li>
						<li>
							<font color="BLACK">Black</font>  : the artifact is present neither in the current POM nor in the parent.
						</li>
					</ul>
            </p>
            </div>
          </subsection>
        </section>  
        <section name="Eclipse Project Synchronization">
        	<div id="documentContent">
          <p>
        	Eclipse Project Synchronization relies on maven-eclipse-plugin for now, so there are some known limitations. However it is planned to provide really integrated support, that will use the JDT API.
          </p>
          </div>
        </section>
        <section>
			<p>
				<navbar prev="run.html" toc="help.html" next="edit.html"/>
			</p>
		</section>
    </body>
</document>