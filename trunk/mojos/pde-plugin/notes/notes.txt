

1. check buildId (configuration/config.ini)
   => property : configuration folder path

2. after build:start refine classpath with eclipse dependencies
   => use requires/import to grab eclipse dependencies

3. build an artifact :
     a> help-only
     b> lib-only
     c> util
     d> help + code (util or plugin)
     e> plugin
     f> feature
     g> site

     constraints :
     o need to override maven.final.name ?
     o need to provide jar with no manifest
     o site should be outputted as a zip as well (local site)
     o help can come as raw xdoc or ready html files

     f> feature

     id => pom.id.replaceAll(':', '.') by default OR maven.pde.id
     label => pom.shortDescription
     version => grabbed version by default OR maven.pde.version
     provider-name => pom.organization.name
     plugin => pom.name OR maven.pde.name
     image => maven.pde.image OR none

     description => pom.description
     license => license.txt OR none
     url => maven.pde.url.label AND maven.pde.url.location
     requires => check children ===> need to keep track of them (HOW ?)
     plugin => multiproject projects + download-size can be computed


     g> site

     description => maven.pde.description.location AND pom.description
     feature => current =====> check children (see above)
     problem : keep track of previous features ===> Solution: donot overwrite
               but merge instead
     category-def ?

4. upload artifacts

