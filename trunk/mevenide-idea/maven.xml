<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:maven="jelly:maven" xmlns:ant="jelly:ant" xmlns:j="jelly:core" xmlns:u="jelly:util">

<!--
 TODO: Validate before executing goals that 'idea.home' is defined, and that the 'idea.settings.dir' is valid
-->

    <goal name="idea:init">
        <ant:property environment="env"/>

        <ant:path id="idea.classpath">
            <ant:pathelement location="${idea.home}\lib\idea.jar"/>
            <ant:pathelement location="${idea.home}\lib\openapi.jar"/>
            <ant:pathelement location="${idea.home}\lib\jdom.jar"/>
            <ant:pathelement location="${idea.home}\lib\log4j.jar"/>
            <ant:pathelement location="${idea.home}\lib\extensions.jar"/>
            <ant:pathelement location="${env.JAVA_HOME}/lib/tools.jar"/>
        </ant:path>
    </goal>

    <goal name="idea:clean" prereqs="idea:init" description="Cleans the IDEA sandbox directory.">
        <ant:delete dir="${idea.sandbox.dir}"/>
    </goal>

    <goal name="idea:copy-license" prereqs="idea:init">
        <ant:mkdir dir="${idea.sandbox.config.dir}"/>
        <ant:copy file="${idea.license.file}"
                  todir="${idea.sandbox.config.dir}"/>
    </goal>

    <goal name="idea:run" prereqs="idea:install"
          description="Builds and installs the plugin in the IDEA sandbox, and runs IDEA.">

        <ant:java classname="com.intellij.idea.Main"
                  classpathref="idea.classpath"
                  fork="true"
                  spawn="false"
                  failonerror="true"
                  jvm="${env.JAVA_HOME}/bin/java"
                  dir="${idea.home.bin.dir}">

            <ant:jvmarg value="-Xbootclasspath/p:${idea.home.lib.dir}\boot.jar"/>
            <ant:jvmarg value="-ea"/>
            <!--<ant:jvmarg value="-Xrunyjpagent:port=10100"/>-->

            <ant:sysproperty key="file.encoding" value="UTF-8"/>
            <ant:sysproperty key="idea.config.path" value="${idea.sandbox.config.dir}"/>
            <ant:sysproperty key="idea.system.path" value="${idea.sandbox.system.dir}"/>
            <ant:sysproperty key="idea.plugins.path" value="${idea.sandbox.plugins.dir}"/>
            <ant:sysproperty key="idea.launcher.port" value="7532"/>
            <ant:sysproperty key="idea.launcher.bin.path" value="${idea.home.bin.dir}"/>

        </ant:java>
    </goal>

    <goal name="idea:debug" prereqs="idea:install"
          description="Builds and installs the plugin in the IDEA sandbox, and runs IDEA.">

        <ant:java classname="com.intellij.idea.Main"
                  classpathref="idea.classpath"
                  fork="true"
                  spawn="false"
                  failonerror="true"
                  jvm="${env.JAVA_HOME}/bin/java"
                  dir="${idea.home.bin.dir}">

            <ant:jvmarg value="-Xbootclasspath/p:${idea.home.lib.dir}\boot.jar"/>
            <ant:jvmarg value="-ea"/>
            <ant:jvmarg value="-Xdebug"/>
            <ant:jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4795"/>
            <ant:jvmarg value="-Xnoagent"/>

            <ant:sysproperty key="java.compiler" value="NONE"/>
            <ant:sysproperty key="file.encoding" value="UTF-8"/>
            <ant:sysproperty key="idea.config.path" value="${idea.sandbox.config.dir}"/>
            <ant:sysproperty key="idea.system.path" value="${idea.sandbox.system.dir}"/>
            <ant:sysproperty key="idea.plugins.path" value="${idea.sandbox.plugins.dir}"/>
            <ant:sysproperty key="idea.launcher.port" value="7532"/>
            <ant:sysproperty key="idea.launcher.bin.path" value="${idea.home.bin.dir}"/>

        </ant:java>
    </goal>

    <goal name="idea:install"
          prereqs="jar:install,idea:copy-license"
          description="Installs the plugin in the IDEA sandbox directory.">

        <!-- make sure target path exists -->
        <ant:mkdir dir="${idea.sandbox.plugin.lib.dir}"/>

        <!-- copy project dependencies to sandbox -->
        <j:forEach var="artifact" items="${pom.artifacts}">
            <j:set var="dep" value="${artifact.dependency}"/>
            <j:if test="${dep.getProperty('idea.plugin.bundle')=='true'}">

                <!-- find the dependency file -->
                <u:file var="f" name="${artifact.file.parent}/${artifact.file.name}"/>
                <ant:copy file="${f}" todir="${idea.sandbox.plugin.lib.dir}"/>

            </j:if>
        </j:forEach>

        <!-- copy project artifact to sandbox -->
        <ant:copy file="${maven.build.dir}/${maven.final.name}.jar" todir="${idea.sandbox.plugin.lib.dir}"/>

    </goal>

    <postGoal name="dist:prepare-bin-filesystem">

        <ant:echo>

            +-------------------------------------------------------------------------+
            | Adding required Maven and modules dependencies to binary distribution. |
            +-------------------------------------------------------------------------+

        </ant:echo>

        <!-- this is the directory containing the plugin, and should be copied into the IDEA -->
        <j:set var="plugin.root" value="${maven.dist.bin.assembly.dir}/plugins/mevenide-idea"/>
        <ant:echo message="Plugin root dir is: ${plugin.root}"/>

        <!-- build and install modules -->
        <maven:reactor
                basedir="${maven.multiproject.basedir}"
                includes="${maven.multiproject.includes}"
                excludes="${maven.multiproject.excludes}"
                goals="jar:install"
                ignoreFailures="false"/>

        <!-- deploy modules to sandbox -->
        <maven:reactor
                basedir="${maven.multiproject.basedir}"
                includes="${maven.multiproject.includes}"
                excludes="${maven.multiproject.excludes}"
                collectOnly="true"
                collectionVar="modules"
                ignoreFailures="false"/>

        <j:forEach var="module" items="${modules}">

            <ant:echo message="Copying module ${module.name} dependencies to distribution"/>

            <!-- copy project dependencies to sandbox -->
            <j:forEach var="artifact" items="${module.artifacts}">
                <j:set var="dep" value="${artifact.dependency}"/>

                <j:if test="${!dep.getProperty('idea.plugin.bundle')=='true'}">
                    <ant:echo message="Dependency ${dep.groupId}.${dep.artifactId} will not be copied."/>
                </j:if>

                <j:if test="${dep.getProperty('idea.plugin.bundle')=='true'}">

                    <!-- find the dependency file -->
                    <u:file var="f" name="${artifact.file.parent}/${artifact.file.name}"/>

                    <!-- find where we should put the dependency in the sandbox -->
                    <j:set var="targetPath" value="${dep.getProperty('idea.plugin.target.path')}"/>
                    <j:set var="fullTargetPath" value="${plugin.root}/${targetPath}"/>
                    <ant:echo message="Dependency ${dep.groupId}.${dep.artifactId} will be copied to ${fullTargetPath}."/>

                    <!-- make sure target path exists for dependency and copy the file -->
                    <ant:mkdir dir="${fullTargetPath}"/>
                    <ant:copy file="${f}" todir="${fullTargetPath}"/>

                </j:if>
            </j:forEach>

            <!-- copy project artifact to sandbox -->
            <j:set var="module.build.dir"
                   value="${module.getContext().getVariable('maven.build.dir')}"/>
            <j:set var="module.final.name"
                   value="${module.getContext().getVariable('maven.final.name')}"/>
            <j:set var="module.target.path"
                   value="${module.getContext().getVariable('idea.plugin.target.path')}"/>
            <j:set var="module.fulltarget.path" value="${plugin.root}/${module.target.path}"/>
            <ant:echo message="Module ${module.groupId}.${module.artifactId} will be copied to ${module.fulltarget.path}."/>
            <ant:mkdir dir="${module.fulltarget.path}"/>
            <ant:copy file="${module.build.dir}/${module.final.name}.jar"
                      todir="${module.fulltarget.path}"/>

        </j:forEach>

        <!-- delete the JAR file, which contains nothing anyway -->
        <delete>
            <ant:fileset dir="${maven.dist.bin.assembly.dir}" includes="${maven.final.name}.jar"/>
        </delete>

    </postGoal>

<!-- override site:generate so that the dist plugin takes the aggregated site
    <goal name="site:generate">
        <attainGoal name="multiproject:site"/>
    </goal>

    <goal name="idea:create-plugin-descriptor-jar">
        <ant:jar destfile="${idea.sandbox}/plugins/mevenide-idea/lib/plugin.jar">
            <ant:zipfileset dir="src/main/etc" includes="*.xml" prefix="META-INF/"/>
        </ant:jar>
    </goal>-->
</project>