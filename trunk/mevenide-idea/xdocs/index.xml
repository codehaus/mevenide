<?xml version="1.0"?>

<document>

    <properties>
        <author email="arikkfir@gmail.com">Arik Kfir</author>
        <title>Mevenide IDEA integration</title>
    </properties>

    <body>

        <section name="Overview">
            <p>
                Welcome to the MevenIDE IDEA Integration project! This project
                aims to integrate
                <a href="http://maven.apache.org">Maven</a> in every possible way into
                <a href="http://www.jetbrains.com">JetBrain</a>'s IntelliJ IDEA.
            </p>
            <p>
                Current integration features include:
                <ul>
                    <li>
                        A POM graphical, and text, editors. The editors are synchronized
                        between them, as well as with changes from outside the IDE.
                    </li>
                    <li>
                        Auto-discovery of a <i>project.xml</i> file for each IDEA module.
                        Creating a POM file (<i>project.xml</i>) either from inside the
                        IDE or from outside (external editor, etc) is automatically detected
                        and enables Maven support for that module.
                    </li>
                    <li>
                        An Ant-like tool window displaying each IDEA module's available
                        goals, as defined in the module's <i>maven.xml</i>.
                    </li>
                    <li>
                        Execution of selected goal(s) in a dedicated execution console,
                        using the standard <i>Run</i> console of IDEA. Each execution
                        can be stopped, paused, or rerun. The output can be copied and
                        exported into the clipboard or a file.
                    </li>
                    <li>
                        Automaticaly open project source code files from Maven-generated
                        output, such as compilation errors.
                    </li>
                    <li>
                        Specifying a different Maven home than the one defined in your
                        <i>MAVEN_HOME</i> environment variable and PATH, as well as
                        auto-detection of your Maven home (via the <i>MAVEN_HOME</i> variable).
                    </li>
                    <li>Easy installation via IDEA's plugins manager.</li>
                    <li>
                        Selecting common goals for each module, for easy access in the
                        goals tool window. Each module can have its own set of common
                        goals, available under the "Favorites" node in the goals tool window.
                    </li>
                    <li>Assigning hot-keys for goals.</li>
                </ul>
            </p>
        </section>

        <section name="Help Wanted!">
            <p>
                The Mevenide IDEA integration project is quite new and we are looking for
                volunteers - you can help! If you like the IntelliJ IDEA, and you like Maven -
                come and help us write the best IDEA plugin yet - <i><b>the Maven plugin!</b></i>
            </p>
            <p>
                To participate - please contact us via our <a href="mail-lists.html">mailing lists</a>.
            </p>
        </section>

        <section name="Compatibility">
            <p>
                Currently the plugin is only supported on the IntelliJ IDEA Early
                Access Program (EAP) dubbed "Irida". It cannot be run on the
                4.5 version.
            </p>
            <p>
                There is, however, a port of the plugin for the 4.5 version
                with provides the basic features such as per-module POM
                attachment, favorite goals, running goals and jumping to
                source code from Maven error messages. It is available
                <a href="http://www.codehaus.org/~arik/dist/mevenide-idea-4.5.4.zip">here</a>.
                <br/>
                NOTE: This is a source code distribution, and you will have to build it from
                source code. If you do, make sure you compile the classes using IDEA, since
                the plugin utilizes the IDEA UI designer, which injects bytecode into the
                classes. There is an Ant script inside, but it does not perform the code
                injection, and you will get exceptions. The Ant script DOES, however, provide
                an Ant task for it, but does not activate it.
            </p>
        </section>
    </body>
</document>