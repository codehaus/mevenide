<?xml version="1.0"?>

<document>

    <properties>
        <author email="arikkfir@gmail.com">Arik Kfir</author>
        <title>Mevenide IDEA integration</title>
    </properties>

    <body>

        <section name="Overview">
            <p>
                The Mevenide IDEA integration project aims to integrate
                <a href="http://maven.apache.org" class="documentLink">Maven</a>in every possible
                way into
                <a href="http://www.jetbrains.com">JetBrain</a>'s IntelliJ IDEA integrated
                development environment.
            </p>
            <p>
                Current integration features include:
                <ul>
                    <li>Specifying a POM file on a per-module basis.</li>
                    <li>
                        An Ant-like tool window displaying each IDEA module's available
                        goals, as defined in
                        <i>maven.xml</i>.
                    </li>
                    <li>
                        Execution of selected goal(s) in a dedicated execution console,
                        much like the standard
                        <i>Run</i>console of IDEA. Each execution
                        can be stopped, or paused.
                    </li>
                    <li>
                        Specifying a different Maven home than the one defined in your
                        <i>MAVEN_HOME</i>environment variable and PATH.
                    </li>
                </ul>
            </p>

            <p>
                The following is a (partial) list of features we intend to be implementing over
                the coming months:
                <ul>
                    <li>Bidirectional update between IDEA project and POM</li>
                    <li>POM user interface editor</li>
                    <li>A wizard for opening+creating IDEA project from a POM</li>
                    <li>Autolaunch goals on specific project events (compilation, etc)</li>
                    <li>Automatic artifact downloading on need (on project open?)</li>
                    <li>
                        Browinsg of both remote and local repositories, as well as manually
                        downloading artifacts to the local repository. Searching the repositories
                        for an artifact is also planned.
                    </li>
                    <li>POM text file editor (instead of the UI editor) with smart intellisense.
                    </li>
                    <li>Jelly script file editor with smart intellisense.</li>
                    <li>Goal searching based on text, dependencies, etc.</li>
                    <li>A wizard for creating a POM from an existing IDEA project.</li>
                    <li>A POM strucutre tree.</li>
                    <li>POM templates.</li>
                </ul>
                For a full list - please see our <a href="todos.html">tasks</a> page.
            </p>
            <subsection name="Compatibility">
                <p>
                    Currently the plugin is only supported on the IntelliJ IDEA Early
                    Access Program (EAP) dubbed "Irida". It cannot be run on the
                    4.5 version.
                </p>
                <p>
                    There is, however, a port of the plugin for the 4.5 version
                    with provides the basic features such as per-module POM
                    attachment, favorite goals, running goals and jumping to
                    source code from Maven error messages. It is available
                    <a href="http://www.codehaus.org/~arik/dist/mevenide-idea-4.5.4.zip">here</a>.
                    <br/>
                    NOTE: This is a source code distribution, and you will have to build it from
                    source code. If you do, make sure you compile the classes using IDEA, since
                    the plugin utilizes the IDEA UI designer, which injects bytecode into the
                    classes. There is an Ant script inside, but it does not perform the code
                    injection, and you will get exceptions. The Ant script DOES, however, provide
                    an Ant task for it, but does not activate it.
                </p>
            </subsection>
        </section>

    </body>
</document>