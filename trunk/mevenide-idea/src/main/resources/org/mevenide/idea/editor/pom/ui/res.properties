#
# POM Editor-wide
#
maven.pom.title=Maven POM Details

#
# General info panel
#
general.info.desc=Here you should define the general charactaristics of your project or module.
project.info.title=General info
pom.version.label=POM model version:
pom.extend.label=Parent POM:
project.name=Name:
project.version=Current version:
project.artifact.id=Artifact ID:
project.group.id=Group ID:
project.url=URL:
project.logo.url=Logo URL or URI:
project.inception.year=Inception year:
project.package=Package:
project.desc.title=Project description
project.short.desc=Short description:
project.desc=Detailed description:
project.mgmt.title=Management
project.issues.url=Issue tracking URL:
choose.pom.parent=Parent POM
choose.pom.parent.desc=Please choose your parent project's POM file
project.org.title=Organization:
project.org.name=Name:
project.org.url=URL:
project.org.logo=Logo:
choose.org.logo=Organization Logo
choose.org.logo.desc=Please choose your organization logo

#
# Deployment panel
#
deployment.desc=\
  Here you can define the deployment properties for your project or module. \
  You can define where to deploy your distributions and your generated site.
site.deployment.title=Site deployment
site.address=Server:
site.directory=Remote directory:
dist.deployment.title=Distribution deployment
dist.address=Server:
dist.directory=Remote directory:

#
# Dependencies panel
#
browse.dep.label=Browse...
dep.list.desc=\
  Here you can list all your project's dependencies, which are required to\
  build and run your project. This list can be synchronized with the list\
  of libraries you defined in your project settings.

#
# Mailing lists panel
#
mail.lists.desc=\
  Mailing lists allow better collaboration between developers in the project.\
  If you have set up mailing lists for your project, you can list them here.

#
# Developers team panel
#
developers.desc=\
  Everyone likes credit, right? :) Here you list the developers that comprise\
  your development team.

#
# Contributors panel
#
contributors.desc=\
  Contributors differ from core developers in that they are not part of the\
  organic development team, yet are kind enough to provide patches and fixes\
  for the team to be incorporated into the project. 

#
# SCM panel
#
scm.desc=\
  Here you may define the Source Control Management (SCM) properties for your \
  project or module. An SCM is a system that tracks the history and evolution\
  of your source code files. Common SCM systems are CVS, Subversion, StarTeam,\
  PVCS, Perforce and others. Maven uses this information to update your\
  source code (if you tell it to), update the SCM when you roll a new version\
  of your source code files or the entire project, etc.
repository.title=Source Control Management repository
scm.anonymous.connection=Anonymous connection:
scm.developer.connection=Developer connection:
scm.browse.url=Browse URL:
versions.title=Versions & Branches
versions.desc=\
  Here you should list the available versions of your project. Each version\
  has an id, a name, and a corresponding SCM tag. Note that if you use the\
  Maven SCM plugin, this is populated for you automatically.
branches.desc=\
  Here you should list the available branches of your project. For each branch\
  you list its SCM tag.

#
# Source code panel
#
src.desc=\
  Here you may define the locations of your main source code files. You may also\
  define a directory for your AOP (Aspect Oriented Programming) files, if you\
  have any. In addition, you might want to define one or more paths to various\
  resources you have that should be considered part of the project artifact.\
  You may define any number of resources, with each resource optionally having\
  inclusion and/or exclusion patterns, so selectively choose which resources\
  should be considered part of the project. 
src.dirs.title=Source code locations
java.src.dir=Java source code:
aspect.src.dir=AOP source code:
conf.dirs.title=Resources locations

#
# Testing panel
#
testing.desc=\
  Here you may define the locations of your test source code files. In addition, \
  you might want to define one or more paths to various resources you have that \
  should be considered part of the project artifact. You may define any number \
  of resources, with each resource optionally having inclusion and/or exclusion \
  patterns, so selectively choose which resources should be considered part of \
  the project.
test.dirs.title=Unit tests source code location
test.src.dir=Unit tests source code:
test.patterns.title=Tests patterns
test.conf.dirs.title=Resources locations

#
# Reports panel
#
reports.desc=Please select the reports you wish to generate for your site: