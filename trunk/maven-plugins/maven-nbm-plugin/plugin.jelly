<?xml version="1.0"?>

<project 
  xmlns:j="jelly:core"
  xmlns:util="jelly:util"
  xmlns:log="jelly:log"
  xmlns:ant="jelly:ant"
  xmlns:maven="jelly:maven"
  xmlns:artifact="artifact">

  <!--==================================================================-->
  <!-- Default goal : Builds a nbm file                             -->
  <!--==================================================================-->    
  <goal 
    name="nbm" 
    prereqs="nbm:nbm" 
    description="Build NBM file"/>

  <!--==================================================================-->
  <!-- Initializations                                                  -->
  <!--==================================================================-->    
  <goal name="nbm:init">
<!--    <j:set var="maven.nbm.final.name"  value="${maven.build.dir}/${maven.final.name}.nbm"/> -->
    <j:set var="maven.nbm.build.dir" value="${maven.build.dir}/nbm" />
    <j:set var="maven.nbm.jar.location" value="netbeans/modules"/>    
    <j:choose>
        <j:when test="${maven.nbm.autoload}">
           <j:set var="maven.nbm.jar.location" value="netbeans/modules/autoload"/>
        </j:when>
        <j:when test="${maven.nbm.eager}">
           <j:set var="maven.nbm.jar.location" value="netbeans/modules/eager"/>
        </j:when>
        <j:otherwise>
            <j:set var="maven.nbm.jar.location" value="netbeans/modules"/>    
        </j:otherwise>
    </j:choose>
    <ant:mkdir dir="${maven.nbm.build.dir}/${maven.nbm.jar.location}"/>
  </goal>

  <goal name="nbm:jar"
      prereqs="jar:jar, nbm:init" 
      description="Build the Netbeans jar.">
<!--    <j:set var="maven.jar.manifest" value="${maven.nbm.manifest}"/> -->
<!--    <j:set var="bundle" value="${maven.nbm.manifest.bundle.basedir}"/>
    <j:if test="${empty(bundle)}">
      <fail message="">
 
The maven.nbm.manifest.bundle.basedir and  maven.nbm.manifest.bundle.include have to be set.
      </fail>
    </j:if>
-->
<!--    <util:file var="thisPom" name="${basedir}/project.xml"/>  -->
<!--    <ant:echo message="manifest=${maven.jar.manifest}" /> -->
<!--    <maven:maven descriptor="${thisPom}" goals="jar:install"/> -->
    <!-- copy the original jar made by jar:jar goal to target/nbm -->
    <ant:copy toDir="${maven.nbm.build.dir}" file="${maven.build.dir}/${maven.final.name}.jar"/>
    <!--
     create a timestamp value for OpenIDE-Module-Implementation-Version: manifest entry
    -->
    <ant:tstamp>
      <ant:format property="maven.nbm.timestamp" pattern="yyyyMMddhhmm" />
    </ant:tstamp>  
    <ant:jar destfile="${maven.nbm.build.dir}/${maven.final.name}.jar"
        manifest="${maven.nbm.manifest}" update="true">
        <!-- include the bundle file, if defined -->
        <ant:echo message="basedir=${maven.nbm.manifest.bundle.basedir}" /> 
        <ant:echo message="include=${maven.nbm.manifest.bundle.include}" /> 
        <j:choose>
           <j:when test="empty(${maven.nbm.manifest.bundle.basedir}) or empty(${maven.nbm.manifest.bundle.include})">
            </j:when>
            <j:otherwise>
                <ant:fileset dir="${maven.nbm.manifest.bundle.basedir}"
                         includes="${maven.nbm.manifest.bundle.include}"
                />       
            </j:otherwise>
        </j:choose>
       <ant:manifest>
       <!-- these attributes get defined this way only if not present in the manifest file -->
          <ant:attribute name="OpenIDE-Module-Implementation-Version" value="${maven.nbm.timestamp}"/>
          <ant:attribute name="OpenIDE-Module" value="${pom.package}/1"/>

          <!-- now do specification version magic -->
          <j:set var="specnum" value="${pom.currentVersion}" />
          <j:choose>
                <j:when test="${specnum.endsWith('-SNAPSHOT')}">
                   <j:set var="shortstamp" value="${maven.nbm.timestamp}" />
                   <j:set var="specnum2" value="${specnum.substring(0, specnum.indexOf('-SNAPSHOT'))}" />
                   <j:set var="specnum" value="${specnum2}.0.${shortstamp.substring(2, 12)}" />
                </j:when>
                <j:when test="${maven.nbm.snapshot}">
                   <j:set var="shortstamp" value="${maven.nbm.timestamp}" />
                   <j:set var="specnum2" value="${specnum}" />
                   <j:set var="specnum" value="${specnum2}.0.${shortstamp.substring(2, 12)}" />
                </j:when>
          </j:choose>
          <ant:attribute name="OpenIDE-Module-Specification-Version" value="${specnum}"/>
          <j:choose>
              <j:when test="${maven.nbm.nonlocalized}">
                <ant:attribute name="OpenIDE-Module-Display-Category" value="${pom.groupId}" />
                <ant:attribute name="OpenIDE-Module-Name" value="${pom.name}" />
                <ant:attribute name="OpenIDE-Module-Long-Description" value="${pom.description}" />
                <ant:attribute name="OpenIDE-Module-Short-Description" value="${pom.shortDescription}" />
              </j:when>
          </j:choose>
       </ant:manifest>
     </ant:jar>
   </goal>

  <!--==================================================================-->

  <!-- Build the nbm                                               -->

  <!--==================================================================-->    

  <goal 
    name="nbm:nbm"
    prereqs="nbm:jar"
    description="Build the NBM">
  <ant:taskdef name="makenbm" classname="org.netbeans.nbbuild.MakeNBM" >
       <ant:classpath>
         <ant:pathelement path="${plugin.getDependencyPath('nbantext')}"/>
        </ant:classpath>
  </ant:taskdef>

    <!-- copy the jar to the right location -->
   <ant:copy toDir="${maven.nbm.build.dir}/${maven.nbm.jar.location}" file="${maven.nbm.build.dir}/${maven.final.name}.jar"/>
    <!-- copy dependency jars in the relevant location -->
    <j:forEach var="artifact" items="${pom.artifacts}">
      <j:set var="dependency" value="${artifact.dependency}"/>
      <j:if test="${dependency.getProperty('netbeans.module.ext') == 'true'}">
        <ant:copy todir="${maven.nbm.build.dir}/${maven.nbm.jar.location}/ext" file="${artifact.path}"/>
        <!--todo add to classpath attribute in manifest as well-->
      </j:if>
    </j:forEach>

<!--DEBUG
    <ant:echo message="autoload=${maven.nbm.autoload}" />
    <ant:echo message="module=${maven.nbm.jar.location}/${maven.final.name}.jar" />
    <ant:echo message="url=${pom.url}" />
    <ant:echo message="licence=${maven.nbm.licence}" />
    -->
    <ant:makenbm file="${maven.nbm.build.dir}/${maven.final.name}.nbm"
             topdir="${maven.nbm.build.dir}"
             module="${maven.nbm.build.dir}/${maven.nbm.jar.location}/${maven.final.name}.jar"
             homepage="${pom.url}"
             distribution="${pom.url}/${maven.final.name}.nbm"
             needsrestart="${maven.nbm.requiresrestart}">
     <license file="${maven.nbm.licence}"/>
     <signature keystore="?" storepass="?" alias="?"/> -->
    </ant:makenbm>
    <!-- now copy the artifact (NBM file) into the local repository
    -->
    <artifact:install
        artifact="${maven.nbm.build.dir}/${maven.final.name}.nbm"
        type="nbm"
        project="${pom}"/>   

<!--    <j:forEach var="lib" items="${pom.artifacts}">
      <ant:copy 
        todir="${libdir}"
        file="${lib.path}"/>
    </j:forEach>
-->    
  </goal>
  
  <!-- will do the same as nbm:nbm but if OpenIDE-SpecificationVersion is not defined in manifest,
   will attempt to generate a snapshot-enhanced version refined from pom.currentVersion
  -->
  <goal name="nbm:nbm-snapshot"
      prereqs="nbm:init" 
      description="Build the Netbeans nbm snapshot.">
    <util:file var="thisPom" name="${basedir}/project.xml"/>  
<!--    <ant:echo message="manifest=${maven.jar.manifest}" /> -->
    <j:set var="maven.nbm.snapshot" value="true" />
    <attainGoal name="nbm:nbm"/> 
  </goal>
</project>
