<project xmlns:j="jelly:core"
		 xmlns:util="jelly:util"
		 xmlns:ant="jelly:ant"
		 xmlns:doc="doc"
		 xmlns:log="jelly:log">
		 
		   
  <goal name="spinner-wiki:generate-templates" prereqs="spinner-wiki:clean">
  	
  	<j:set var="wikiDestTempDir" value="${maven.build.dir}/spinner-wiki-tmp"/>
  	<j:set var="wikiDestDir" value="${maven.build.dir}/spinner-wiki"/>
  	<j:set var="wikiSrcDir" value="${maven.build.dir}/templates/spinner-wiki"/>

	<ant:mkdir dir="${wikiSrcDir}"/>
	<ant:mkdir dir="${wikiDestTempDir}"/>
	
	<!-- determine which stylesheet to use -->
    <j:set var="stylesheet" value="${maven.xdoc.jsl}"/>
    <j:if test="${empty(stylesheet)}">
      <j:set var="stylesheet" value="${plugin.resources}/site.jsl"/>
      <j:if test="${empty(stylesheet)}">
        <log:warn>Could not load the JSL stylesheet 'site.jsl' on the classpath</log:warn>
        <j:set var="stylesheet" value="./site.jsl"/>
      </j:if>
    </j:if>
    
    <!-- determine nav file to be used:- 1. check for sitewide nav files -->
    <!-- supplied nav file as project.xml in stylesheets dir -->
    <util:available file="${maven.docs.src}/stylesheets/project.xml">
      <util:file var="siteNavFile" name="${maven.docs.src}/stylesheets/project.xml"/>
    </util:available>
    <!-- supplied nav file as project.xml in root of xdocs source tree -->
    <util:available file="${maven.docs.src}/project.xml">
      <util:file var="siteNavFile" name="${maven.docs.src}/project.xml"/>
    </util:available>
    <!-- supplied navigation file in root of xdocs source tree -->
    <util:available file="${maven.docs.src}/navigation.xml">
      <util:file var="siteNavFile" name="${maven.docs.src}/navigation.xml"/>
    </util:available>
    <!-- navigation file that was generated -->
    <util:available file="${maven.gen.docs}/navigation.xml"> 
      <util:file var="siteNavFile" name="${maven.gen.docs}/navigation.xml"/> 
    </util:available> 
    
	<ant:copy todir="${wikiSrcDir}">
  		<ant:fileset dir="${plugin.resources}/templates"/>
  	</ant:copy>
  	
  	<!-- 
  		TODO menus items should link to "../../${oldItemLink}" 
  	-->
  	<util:file name="${siteNavFile}" var="nav"/>
  	<ant:copy todir="${wikiSrcDir}">
  		<ant:fileset dir="${nav.getParent()}" file="${siteNavFile}"/>	
  	</ant:copy>
  	
  	<j:set var="maven.docs.src" value="${wikiSrcDir}"/>
  	<j:set var="maven.docs.dest" value="${wikiDestTempDir}"/>
  	<j:set var="maven.gen.docs" value="${wikiDestTempDir}/generated-xdocs"/>
  	
  	<doc:performJSL srcdir="${wikiSrcDir}" destdir="${wikiDestTempDir}"/>
  	
  	<ant:fileScanner var="generatedTemplates">
  		<ant:fileset dir="${wikiDestTempDir}/">
  			<!-- 
  				scary list of files since maven reports 
  				are generated in the same dir as well. 
  				there should be a better way..
  			-->
  			<ant:include name="abort.html"/>
  			<ant:include name="wchanges.html"/>
  			<ant:include name="edit.html"/>
  			<ant:include name="editlast.html"/>
  			<ant:include name="index.html"/>
  			<ant:include name="message.html"/>
  			<ant:include name="search.html"/>
  			<ant:include name="upload.html"/>
  			<ant:include name="view.html"/>
  		</ant:fileset>
  	</ant:fileScanner>
  	
  	<!-- 
  		TODO links to css stylesheets should made absolute
  		TODO what about img src attribute ?
  	-->
  	<j:forEach items="${generatedTemplates.iterator()}" var="template">
  		<util:file var="templateFile" name="${template}"/>
  		<j:set var="fileName">${templateFile.getName()}</j:set>
  		<j:if test="${fileName != 'wchanges.html'}">
  			<j:set var="newFileName" value="${fileName.substring(0, fileName.indexOf('.'))}.htm"/>
	  		<ant:copy file="${wikiDestTempDir}/${fileName}" tofile="${wikiDestDir}/${newFileName}"/>
	  	</j:if>
	  	<j:if test="${fileName == 'wchanges.html'}">
	  		<ant:copy file="${wikiDestTempDir}/${fileName}" tofile="${wikiDestDir}/changes.htm"/>
	  	</j:if>
  	</j:forEach>
  	
  	<ant:delete dir="${wikiDestTempDir}"/>
  	<ant:delete dir="${wikiSrcDir}"/>
  	
  </goal>
  
  <goal name="spinner-wiki:clean">
  	<j:set var="wikiDestDir" value="${maven.build.dir}/spinner-wiki"/>
    <ant:delete dir="${wikiDestDir}"/>
  </goal>

</project>