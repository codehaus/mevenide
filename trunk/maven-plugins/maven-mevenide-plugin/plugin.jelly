<?xml version="1.0"?>

<project 
  xmlns:j="jelly:core"
  xmlns:util="jelly:util"
  xmlns:ant="jelly:ant"
  xmlns:maven="jelly:maven">

  
  <goal name="mevenide:noop" 
        description="A noop goal, useful to rebuild the local caches etc.">
  </goal>
  
   <goal name="mevenide:run-class" 
          description="Run the project's classes.">
      <ant:path id="cp">
        <ant:pathelement location="${maven.build.dest}"/>
        <ant:path refid="maven.dependency.classpath"/>
       </ant:path>
       <j:set var="mainClass" value="${maven.mevenide.run.classname}"/>
       <ant:java classname="${mainClass}" classpathref="cp" fork="true">
         <ant:arg line="${maven.mevenide.run.args}"/>
         <ant:jvmarg line="${maven.mevenide.run.jvmargs}"/>
       </ant:java>
   </goal>   

   <goal name="mevenide:compile-run-class"
         prereqs="java:compile, mevenide:run-class"
         description="Compile and runs the project's classes.">
   </goal>
   
   <goal name="mevenide:run-artifact"
         description="Runs the project's jar artifact">
      <ant:path id="cp">
        <ant:pathelement location="${maven.mevenide.run.jar}"/> 
        <ant:path refid="maven.dependency.classpath"/>
       </ant:path>
       <j:set var="mainClass" value="${maven.jar.mainclass}"/>
       <j:if test="empty mainClass">
          <fail message="Your project doesn't define maven.jar.mainclass property. Cannot run the jar properly."/>
       </j:if>
       <ant:java classname="${mainClass}" classpathref="cp" fork="true">
         <ant:arg line="${maven.mevenide.run.args}"/>
         <ant:jvmarg line="${maven.mevenide.run.jvmargs}"/>
       </ant:java>
   </goal>   
   
   <goal name="mevenide:jar-run-artifact"
         prereqs="jar:jar, mevenide:run-artifact"
         description="Creates and runs the project's jar artifact">
   </goal>

   <goal name="mevenide:run-exec"
         description="Execute the application using a custom script.">
      <ant:exec dir="${src}" executable="${maven.mevenide.run.exec}" fork="true">
         <ant:arg line="${maven.mevenide.run.args}"/>
      </ant:exec>
   </goal>   
   
   <goal name="mevenide:test-single-debug"
         description="Run the single test with debug environment set.">
      <j:set var="maven.junit.jvmargs" value="${maven.mevenide.debug.jvmargs}" scope="parent"/>
      <j:set var="maven.junit.fork" value="yes" scope="parent"/>
<!--      <j:set var="maven.junit.jvm" value="/usr/java/jdk1.5.0/bin/java"/> -->
[mevenide-debug-start] Starting the debugged test...

      <ant:echo message="jvmargs=${maven.mevenide.debug.jvmargs}"/>
<!-- ant:echo seems to be necesary to flush the maven output before running the app -->       
      <attainGoal name="test:single" />
   </goal>
   
   <goal name="mevenide:test-debug" 
         description="Run the tests with debug environment set.">
      <j:set var="maven.junit.jvmargs" value="${maven.mevenide.debug.jvmargs}" scope="parent"/>
      <j:set var="maven.junit.fork" value="yes" scope="parent"/>
<!--      <j:set var="maven.junit.jvm" value="/usr/java/jdk1.5.0/bin/java"/> -->
[mevenide-debug-start] Starting to debug tests...

      <ant:echo message="jvmargs=${maven.mevenide.debug.jvmargs}"/>
<!-- ant:echo seems to be necesary to flush the maven output before running the app -->       
      <attainGoal name="test:test"/>
   </goal>
      
   
  <goal name="mevenide:debug-class" 
          description="Run the project's class and debug it.">
      <ant:path id="cp">
        <ant:pathelement location="${maven.build.dest}"/>
        <ant:path refid="maven.dependency.classpath"/>
       </ant:path>
       <j:set var="mainClass" value="${maven.mevenide.run.classname}"/>
[mevenide-debug-start] Starting the debugged application...

       <ant:echo message="jvmargs=${maven.mevenide.debug.jvmargs} ${maven.mevenide.run.jvmargs}"/>
<!-- ant:echo seems to be necesary to flush the maven output before running the app -->       
       <ant:java classname="${mainClass}" classpathref="cp" fork="true">
         <ant:arg line="${maven.mevenide.run.args}"/>
         <ant:jvmarg line="${maven.mevenide.debug.jvmargs} ${maven.mevenide.run.jvmargs}"/>
       </ant:java>
   </goal>   
   
   <goal name="mevenide:java-debug-class" 
         prereqs="java, mevenide:debug-class"
         description="Compile the sources and then run the class with debug environment set.">
   </goal>      
   
   <goal name="mevenide:debug-artifact"
         description="Run the project's jar artifact and debug it.">
      <ant:path id="cp">
         <ant:pathelement location="${maven.mevenide.run.jar}"/> 
         <ant:path refid="maven.dependency.classpath"/>
       </ant:path>
       <j:set var="mainClass" value="${maven.jar.mainclass}"/>
       <j:if test="empty mainClass">
          <fail message="Your project doesn't define maven.jar.mainclass property. Cannot debug the jar properly."/>
       </j:if>
[mevenide-debug-start] Starting the debugged application...

       <ant:echo message="jvmargs=${maven.mevenide.debug.jvmargs} ${maven.mevenide.run.jvmargs}"/>
<!-- ant:echo seems to be necesary to flush the maven output before running the app -->       
       <ant:java classname="${mainClass}" classpathref="cp" fork="true">
         <ant:arg line="${maven.mevenide.run.args}"/>
         <ant:jvmarg line="${maven.mevenide.debug.jvmargs} ${maven.mevenide.run.jvmargs}"/>
       </ant:java>
   </goal>            
   
   <goal name="mevenide:jar-debug-artifact" 
         prereqs="jar, mevenide:debug-artifact"
         description="Build the artifact and then start the application with debug environment set.">
   </goal>
   
</project>
