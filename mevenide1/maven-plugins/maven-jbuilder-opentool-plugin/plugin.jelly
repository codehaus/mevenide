<?xml version="1.0" encoding="ISO-8859-1"?>

<project xmlns:ant="jelly:ant"
         xmlns:define="jelly:define"
         xmlns:j="jelly:core"
         xmlns:maven="jelly:maven"
         xmlns:mevenide="jelly:org.mevenide.tags.jbuilder.opentool.MevenideTagLibrary"
         xmlns:util="jelly:util"
         xmlns:x="jelly:xml">

    <goal name="opentool" prereqs="opentool:opentool"
          description="Package project as an JBuilder OpenTool extension"/>

    <goal name="opentool:opentool" description="Package project as an OpenTool">
      <echo message="Building JBuilder OpenTool..."/>
      <j:set var="maven.opentool.build.dir" value="${maven.build.dir}/opentool"/>
      <echo message="debug: ${maven.opentool.build.dir}, ${maven.opentool.lib.dir}"/>

      <j:set var="packageType" value="${maven.opentool.package.type}"/>
      <j:choose>
          <j:when test="${packageType == 'standalone'}">
              <attainGoal name="opentool:opentool-standalonejar" />
          </j:when>
          <j:when test="${packageType == 'repository'}">
              <attainGoal name="opentool:opentool-repositoryconfig" />
          </j:when>
          <j:when test="${packageType == 'location'}">
              <attainGoal name="opentool:opentool-locationconfig" />
          </j:when>
          <j:otherwise>
              <echo>Invalid package type ${maven.opentool.package.type}</echo>
          </j:otherwise>
      </j:choose>
    </goal>

    <goal name="opentool:opentool-standalonejar">
        <echo>Building standalone OpenTool</echo>
        <j:forEach var="artifact" items="${pom.artifacts}">
          <j:set var="dependency" value="${artifact.dependency}"/>
          <j:if test="${!(dependency.groupId.equals('jbuilder')) and dependency.getProperty('jbuilder.opentool.bundle') == 'true'}">
            <unjar src="${artifact.path}" dest="${maven.build.dest}"/>
          </j:if>
        </j:forEach>
        <attainGoal name="jar:jar" />
        <copy file="${maven.build.dir}/${pom.artifactId}-${pom.currentVersion}.jar" todir="${maven.opentool.build.dir}" />
    </goal>

    <goal name="opentool:opentool-repositoryconfig">
      <echo>Building OpenTool with dependencies in Maven repository</echo>
      <mevenide:generate-config pom="${pom}" useLocalRepository="true" withThisArtifact="true" />
      <attainGoal name="jar:install" />
    </goal>

    <goal name="opentool:opentool-locationconfig">
        <echo>Building OpenTool with dependencies in location ${maven.opentool.location}</echo>
        <mevenide:generate-config pom="${pom}" useLocalRepository="false" dependencyLocation="${maven.opentool.location}" withThisArtifact="true" />
        <attainGoal name="jar:jar" />
        <j:forEach var="artifact" items="${pom.artifacts}">
          <j:set var="dependency" value="${artifact.dependency}"/>
          <j:if test="${!(dependency.groupId.equals('jbuilder')) and dependency.getProperty('jbuilder.opentool.bundle') == 'true'}">
            <ant:copy file="${artifact.path}" todir="${maven.opentool.build.dir}/${maven.opentool.location}" />
          </j:if>
        </j:forEach>
        <copy file="${maven.build.dir}/${pom.artifactId}-${pom.currentVersion}.jar" todir="${maven.opentool.build.dir}/${maven.opentool.location}" />
    </goal>

    <goal name="opentool:install" 
          prereqs="opentool:opentool"
          description="Install this OpenTool into a local JBuilder installation">
        <copy todir="${maven.opentool.jbuilder.home}/lib/ext">
          <fileset dir="${maven.opentool.build.dir}"/>
        </copy>
    </goal>

    <goal name="opentool:uninstall" description="Uninstall this OpenTool from a local JBuilder installation">
      <j:set var="packageType" value="${maven.opentool.package.type}"/>
      <j:choose>
          <j:when test="${packageType == 'standalone'}">
              <attainGoal name="opentool:uninstall-standalonejar" />
          </j:when>
          <j:when test="${packageType == 'repository'}">
              <attainGoal name="opentool:uninstall-repositoryconfig" />
          </j:when>
          <j:when test="${packageType == 'location'}">
              <attainGoal name="opentool:uninstall-locationconfig" />
          </j:when>
          <j:otherwise>
              <echo>Invalid package type ${maven.opentool.package.type}</echo>
          </j:otherwise>
      </j:choose>
    </goal>

    <goal name="opentool:uninstall-standalonejar">
        <delete file="${maven.opentool.jbuilder.home}/lib/ext/${pom.artifactId}-${pom.currentVersion}.jar" />
    </goal>

    <goal name="opentool:uninstall-repositoryconfig">
        <delete file="${maven.opentool.jbuilder.home}/lib/ext/${pom.artifactId}.config" />
    </goal>

    <goal name="opentool:uninstall-locationconfig">
        <delete file="${maven.opentool.jbuilder.home}/lib/ext/${pom.artifactId}.config" />
        <delete dir="${maven.opentool.jbuilder.home}/lib/ext/${maven.opentool.location}" />
    </goal>

    <goal name="opentool:dist" prereqs="opentool:opentool" description="Package this OpenTool project for distribution">
      <j:set var="packageType" value="${maven.opentool.package.type}"/>
      <j:choose>
          <j:when test="${packageType == 'standalone'}">
              <attainGoal name="opentool:dist-standalonejar" />
          </j:when>
          <j:when test="${packageType == 'repository'}">
              <attainGoal name="opentool:dist-repositoryconfig" />
          </j:when>
          <j:when test="${packageType == 'location'}">
              <attainGoal name="opentool:dist-locationconfig" />
          </j:when>
          <j:otherwise>
              <echo>Invalid package type ${maven.opentool.package.type}</echo>
          </j:otherwise>
      </j:choose>
    </goal>

    <goal name="opentool:dist-standalonejar">
        <copy file="${maven.opentool.build.dir}/${pom.artifactId}-${pom.currentVersion}.jar" todir="${maven.opentool.dist.dir}" />
    </goal>

    <goal name="opentool:dist-repositoryconfig">
        <mkdir dir="${maven.opentool.dist.dir}" />
        <zip destfile="${maven.opentool.dist.dir}/${pom.artifactId}-${pom.currentVersion}.zip" basedir="${maven.opentool.build.dir}" />
    </goal>

    <goal name="opentool:dist-locationconfig">
        <mkdir dir="${maven.opentool.dist.dir}" />
        <zip destfile="${maven.opentool.dist.dir}/${pom.artifactId}-${pom.currentVersion}.zip" basedir="${maven.opentool.build.dir}" />
    </goal>

</project>

