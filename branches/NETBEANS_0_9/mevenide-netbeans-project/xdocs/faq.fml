<?xml version="1.0" encoding="ISO-8859-1"?>
<faqs title="Frequently Asked Questions">
   
   <part id="install">
    <title>Installing</title>
        <faq id="macosx">
        <question> 
            How do I setup mevenide on Mac OSX?
        </question> 
        <answer>
           <p>Apart from downloading the mevenide binaries, you need to setup the MAVEN_HOME and JAVA_HOME environment variables.
           You can do it in the netbeans install dir's  etc/netbeans.conf file. For details and alternate ways, see <a href="http://jira.codehaus.org/browse/MEVENIDE-88">MEVENIDE-88 bug report.</a></p>
           <p> Courtesy of Travis Risner. </p>
        </answer>
        </faq>
        
    </part>
    
   <part id="setup">
    <title>Project Setup</title>
        <faq id="dependency">
        <question> 
            How come my dependency is not on classpath?
        </question> 
        <answer>
           <p>When you get red underlines for classes and methods from one of your dependencies, please check if you define it's type element. Make it either jar or ejb, depending on the type of the dependency. </p>
        </answer>
        </faq>
        <faq id="javadoc">
        <question>
        How will I get javadoc for my dependencies to show up in code completion?
        </question>
        <answer>
         <p>
           Put the jar with javadocs into your local repository (in the group's folder create a "javadoc.jars" subfolder), give it the same name as the jar and the "javadoc.jar" extension (instead of default "jar") and the IDE will find it.
           When the javadoc is on remote repository, just declare additional dependency of type javadoc. In the latest versions of maven-javadoc-plugin, the javadoc's artifact type was changed from "javadoc" to "javadoc.jar", so the javadoc file should be put into the "javadoc.jars" directory and have the extension "javadoc.jar".
           If you have the project opened, the javadoc:install goal will create the javadoc and put it in the local repository for you.
           </p>
        </answer>
        </faq>

        <faq id="src">
        <question>
        How can I add sources to my dependencies, for use in debugging and for code browsing?
        </question>
        <answer>
         <p>
Similarly as the javadocs, the jar with artifacts sources belongs to the local repository under the src.jar category.
So for example for log4j-2.8.3.jar dependency, the sources belong to ${maven.repo.local}/log4j/src.jar/log4j-2.8.3.src.jar
          </p>
        </answer>
        </faq>

        <faq id="multiproject">
        <question>
        I have a project and several subprojects, how do I link them together?
        </question>
        <answer>
       <p> Use the multiproject plugin's properties </p><source>maven.multiproject.basedir</source> <p>and</p> <source>maven.multiproject.includes</source> <p>to denote your subprojects.
        When opening such project, the subprojects can be opened as well. Refactoring and other cross project features work then on all the projects. </p>
        </answer>
        </faq>
        
    </part>
    
<!--        <faq id="build">
        <question> 
            How do I build the Netbeans module?
        </question> 
        <answer>
           <p> Once you've checked out the sources, go to mevenide-master and run <code> maven mevenide:install-maven-nbm-plugin mevenide-netbeans:build </code>
           The first goal will create and deploy the nbm plugin for you which is able to create netbeans jars and nbm files. The second goal will do the building.</p>
           <p> The created nbm files will be located in your local maven repository under mevenide/nbms. </p>
        </answer>
        </faq>
        <faq id="how-install">
            <question>
             How do I install the built snapshot into the Netbeans IDE?
            </question>
            <answer>
               <p> You should have the goal-grabber, mevenide-core and mevenide-ui-netbeans atrifacts built before processing (Should be done for you by the <code> mevenide-netbeans:build </code> goal in mevenide-master). 
                Also ensure you have Netbeans 3.5.1 and Maven1.0rc1. 
                  Later versions should be also ok. It will most probably not work with Netbeans 3.4, but 3.5 should be fine.  </p>
               <p> Let's call your netbeans install directory <code>NETBEANS_HOME</code>, 
                 and your maven install directory <code>MAVEN_HOME</code>. 
                 Then you will also need to copy the content of <code>$MAVEN_HOME/lib</code> (excluding the "endorsed: subdirectory) into <code>$NETBEANS_HOME/lib/ext</code>
                 Then run the IDE and using the "Tools/Update Center" menu action install the built nbm artifacts. (please note that when you already have an older version installed, you will have to delete the module jars in order to have a new one installed.)
                 And now you should be able to run Maven support in the IDE. </p>
            </answer>
        </faq>
   </part>
   -->
</faqs>