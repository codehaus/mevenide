<?xml version="1.0" encoding="UTF-8"?>

<document>
    <properties>
        <title>Changes</title>
        <author email="arikkfir@gmail.com">Arik Kfir</author>
    </properties>
    <body>

        <release version="0.2" date="unreleased" description="New features">
            <action dev="arikkfir" type="update">
                Lenient POM editor! The POM editor is now lenient, ignoring
                syntax errors, illegal tags, and even illegal XML syntax!
                <p>
                    This makes the POM editor much more usable, allowing
                    you to "write first, fix later" the POM, while still
                    leveraging the capabilities of a slick UI for the POM.
                    This was made possible by utilizing IDEA's PSI which
                    exposes XML structure even if it is not valid (kudos
                    to JetBrains!).
                </p>
            </action>
            <action dev="arikkfir" type="add">
                Refactored POM interpolation mechanism, by creating a JavaBean that
                is backed by the underlying POM structure, thus exposing the
                POM as a bean. This simplifies the code in the POM editor,
                and will be utilized throughout the plugin.

                <p>Currently, the POM editor uses this new API for representing
                the POM graphically. In later versions, this API will be exposed
                to other IDEA plugins, and enable customizations of the POM that
                will automatically be reflected in Maven and in the plugin.</p>
            </action>
            <action dev="arikkfir" type="add">
                Added POM&lt;-&gt;IDEA synchronization inspections. These
                inspections let you know (on demand) if there are any
                differences between your IDEA project and your POM file.
                Currently supported are:
                <ul>
                    <li>Dependencies defined in POM and missing from IDEA modules</li>
                    <li>Libraries defined in IDEA module and missing from POM.</li>
                    <li>Dependencies declared in POM and missing from local repository.</li>
                </ul>
                Problems discovered are displayed in the POM Sync tool window,
                where you can apply one of the multiple auto-fixes for each
                problem.
            </action>
            <action dev="arikkfir" type="add">
                Added support for editing dependency properties to POM editor.
            </action>
            <action dev="arikkfir" type="add">
                The goals tool window now supports Scroll To Source. If enabled,
                clicking a goal will scroll to that goal in the <i>maven.xml</i>
                file, or the actual plugin source code file (<i>plugin.jelly</i>,
                located in the Maven cache directory).
            </action>
            <action dev="arikkfir" type="add">
                The POM dependencies editor now allows browsing for a
                dependency, rather than having to manually type it in.
            </action>
            <action dev="arikkfir" type="add">
                Add a repository browser capable of rendering both the local and
                remote repositories. The browser is integrated into the IDE via
                a tool window, and supports downloading multiple artifacts, types
                and even complete artifact groups (a-ka "groupId").
            </action>
        </release>

        <release version="0.1" date="2005-05-29" description="The initial version.">
            <action dev="arikkfir" type="add">
                A graphical Project Object Model (POM) editor. The editor includes a
                standard text editor, as well as an intuitive user interface for editing
                the various aspects of a project.
            </action>
            <action dev="arikkfir" type="add">
                Full synchronization between the POM text editor and the graphical POM
                editor, as well as with POM modifications outside the IntelliJ IDE.
            </action>
            <action dev="arikkfir" type="add">
                Automatic discovery of POM files (<i>project.xml</i> and <i>maven.xml</i>)
                for each IntelliJ module. The plugin will detect if you create one of
                these files either from inside the IDE or from outside, and will respond
                appropriately.
            </action>
            <action dev="arikkfir" type="add">
                A special Maven side pane (also called a Tool Window) displaying the
                available Maven goals for the project. The pane shows goals defined in the
                module's <i>maven.xml</i> file, and common goals, marked as "favorites" in
                the module settings dialog.
            </action>
            <action dev="arikkfir" type="add">
                Execution of selected goal(s) in a dedicated execution console which
                supports stop, pause, and re-run. The console supports copying the Maven
                output into the clipboard or into a text file.
            </action>
            <action dev="arikkfir" type="add">
                Compilation errors reported by Maven in the execution console are displayed
                as links, which open the appropriate source code file at the appropriate
                location.
            </action>
            <action dev="arikkfir" type="add">
                Auto-detection of your Maven home (via the <i>MAVEN_HOME</i> environment
                variable), and support for specifying a different Maven home (does not
                modify the environment variable).
            </action>
            <action dev="arikkfir" type="add">
                Easy installation via the IntelliJ IDEA plugins manager.
            </action>
            <action dev="arikkfir" type="add">
                Support for assigning shortcut keys (hot-keys) for specific goals for a
                specific module in the IDE (no need to find the goal in the Goals tool
                window).
            </action>
        </release>
    </body>
</document>
