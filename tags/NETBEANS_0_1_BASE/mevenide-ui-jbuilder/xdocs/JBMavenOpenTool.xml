<?xml version="1.0"?>
<document>

  	<properties>
    	<author email="rhill@wanadoo.fr">Gilles Dodinet</author>
    	<title>Mevenide Goals Grabber Overview</title>
  	</properties>

	<body>
		<section name="Features">
			
			<subsection name="Using the Maven OpenTool">
				<div id="documentContent">
				<p>This tool works a lot like the existing Ant integration that JBuilder
				includes in version 7 and above.</p>
				<ul>
				<li>Add your <code>maven.xml</code> project file to your JBuilder project</li>
				<li>Right click the maven.xml file and select "Properties...". In the Maven tab,
					make sure you set the location of the Maven home directory.</li>
				<li>The tool will then recognize all the available plugins for your project
					and will display them as children of the Maven file.</li>
				<li>You can right-click on any goal (you can't right click on plugins) and
					execute the goal selected by clicking on "Make"
				</li>
				<li>You can also set a maven goal as a "Build Target" in the RunTime
					configuration menu, and it will be launched just before the application
					gets started when you run your project (useful for deployment for
					example)
				</li>
				</ul>
				</div>
			</subsection>
			
			<subsection name="Automatic Dependency Library Generation">
				<div id="documentContent">
				<p>This tool also automatically updates a JBuilder library called
				   <b>MavenAutoUpdated.library</b> that is generated in the same directory as the
				   JBuilder project (*.jpx) file. It is generated from the Maven project
				   descriptor file (project.xml), which is assumed to be in the same location as
				   the maven.xml file and contains all the JAR dependencies. In
				   order for this function to work, you must have inserted the <b>maven.xml</b>
				   (not the project.xml file, it's just assumed it's in the same place as
				   the maven.xml file) in your project and the JARs *must* be already present in
				   the maven local repository, which is assumed to be located in :
				</p>
				<p>${user.home}/.maven/repository</p>
				<p>You can therefore simply include all Maven dependencies as a required library
					for the JBuilder project and you should then be able to compile the project
					with JBuilder in sync with Maven. Note that this OpenTool does not automatically
					insert the library into the project, since this is something that might not
					be desired, but the library file will always be updated nonetheless (should
					you want to add it later on).
				</p>
				</div>
			</subsection>
			
			<subsection name="Credits">
				<div id="documentContent">
				<p>
				  Written by Serge Huber (<a href="mailto:shuber2@jahia.com">shuber2@jahia.com</a>)
				</p>
				</div>
			</subsection>
			
			<subsection name="History">
				<div id="documentContent">
				<p>Version 1.0<br />Initial release</p>
				</div>
			</subsection>
			
		</section>
	
	</body>
	
</document>